@{
    var errors = new ModelErrorCollection();
    var fieldValue = string.Empty;
    var modelState = (TempData["ModelState"]?.ToString() ?? string.Empty).DeserializeModelState();
    var field = Model.Fields[0];
    var fieldName = field.Name;

    if (modelState.TryGetValue((string)fieldName, out var fieldEntry))
    {
        errors = fieldEntry.Errors;
        fieldValue = fieldEntry.AttemptedValue;
    }
}

<div class="form-group @(errors.Any() ? "is-error" : "")">
    <label for="@fieldName">
        @Model.Question.Label @if (Model.Question.Required)
        {<span class="required">*</span>}
    </label>

    @if (!string.IsNullOrEmpty(Model.Question.Description))
    {
        <span id="@fieldName-hint" class="hint">
            @Html.Raw(Model.Question.Description)
        </span>
    }

    <select class="select"
            id="@fieldName"
            name="@fieldName"
            value="@fieldValue"
            @if (!string.IsNullOrEmpty(Model.Question.Description)) { <text> aria-describedby="@fieldName-hint" </text> }
            @if (Model.Question.Required) { <text>required</text> }>
        <option value="">@T["Please select"]</option>

        @foreach (var option in field.Values)
        {
            @if (option.Value.ToString() == fieldValue)
            {
                <option value="@option.Value" selected>@option.Label</option>
            }
            else
            {
                <option value="@option.Value">@option.Label</option>
            }
        }
    </select>

    @foreach (var error in errors)
    {
        <div class="form-group__error">@error.ErrorMessage</div>
    }
</div>