@model Etch.OrchardCore.Greenhouse.ViewModels.GreenhousePostingFormPartViewModel

@using Etch.OrchardCore.Greenhouse

@{
    var modelState = (TempData["ModelState"]?.ToString() ?? string.Empty).DeserializeModelState();
}

@if (Model.ShowApplicationForm)
{
    @if (Model.UseReCaptcha)
    {
        <script at="Head">
            window.onGreenhouseRecaptchComplete = function(token) {
                document.getElementById('greenhouse-apply-form').submit();
            }

            window.onGreenhouseApplySubmit = function() {
                grecaptcha.execute();
                return false;
            };
        </script>

        <script src="https://www.google.com/recaptcha/api.js" at="Head" async defer></script>
    }

    <section id="@Constants.AnchorUrl" class="section section--spaced-after-none" style="--sectionBackgroundColor:#eae8e5;">
        <div class="section__content constrain">
            <form 
                id="greenhouse-apply-form" 
                method="post" 
                action="@Context.Request.PathBase/greenhouse/apply/@Model.ContentItem.ContentItemId" 
                enctype="multipart/form-data"
                class="js-analytics-track"
                data-item-id="@Model.Posting.Id"
                data-name="@Model.Posting.Title"
                data-brand="@Model.PostingPart.Location"
                data-category="@Model.PostingPart.Department"
                data-events="addToCart"
                onsubmit="@(Model.UseReCaptcha ? "window.onGreenhouseApplySubmit()" : string.Empty)">

                @if (TempData.ContainsKey(Constants.TempDataKeys.ApplicationError))
                {
                    <p class="alert alert--error">@TempData[Constants.TempDataKeys.ApplicationError]</p>
                }

                @if (!modelState.IsValid && !string.IsNullOrWhiteSpace(Model.Settings.ValidationErrorsMessage) && !TempData.ContainsKey(Constants.TempDataKeys.ApplicationError))
                {
                    <p class="alert alert--error">@Html.Raw(Model.Settings.ValidationErrorsMessage)</p>
                }

                @foreach (var question in Model.Questions)
                {
                    @await DisplayAsync(question)
                }

                @Html.AntiForgeryToken()

                @if (Model.UseReCaptcha)
                {
                    <div class="g-recaptcha"
                      data-sitekey="@Model.ReCaptchaSettings.SiteKey"
                      data-callback="onGreenhouseRecaptchComplete"
                      data-size="invisible"></div>
                }

                <button 
                    class="btn btn--primary g-recaptcha"
                    type="submit"
                    data-sitekey="@Model.ReCaptchaSettings.SiteKey"
                    data-callback="onGreenhouseApplySubmit">@Model.Settings.SubmitButtonLabel</button>
            </form>
        </div>
    </section>
}
